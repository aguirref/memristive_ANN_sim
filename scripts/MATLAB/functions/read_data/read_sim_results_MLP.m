function results = read_sim_results_MLP(use_write_data,...
                                    limit_output,...
                                    remap_mode,...
                                    sim_degradation,...
                                    flr_type,...
                                    correct_rs,...
                                    memdiode_model_array,...
                                    connections,...
                                    number_of_images,...
                                    partitions_N,...
                                    read_voltage,...
                                    write_voltage,...
                                    R_cs,...
                                    series_resistance,...
                                    SCTKF_ratio,...
                                    MC_total,...
                                    simEngine,...
                                    map_array,...
                                    mode,...
                                    image_size_mat,...
                                    connections_remap,...
                                    numSigma,...
                                    database,...
                                    neural_layers,...
                                    neurons_per_layer,...
                                    sense_folder,...
                                    in_polarity,...
                                    learn_algorithm,...
                                    all_logsig,...
                                    train_MC_idx,...
                                    STCKF_total_ratio)

    input_vector_freq=[100e3];
    in_vect_r_f_time=1e-7;
    wrFrequency_vec=2.5e4;
    Dcycle_vec=[0.25];
    Dcycle_v=0.25;
    trise=1e-6;
    tdelay_gral=10e-6;
    %STCKF_total_ratio=[0.2];
    
    %% User-dependent system-configurable settins    
    % h_data: defines wheter the inference simulation uses ideal values of
    % H or obtains them from a writting opeation. It is defined based on
    % use_write_data
    if use_write_data==1
        h_data='sim';
    else
        h_data='ideal';
    end
    
    if limit_output==1 && strcmpi(in_polarity,'unipolar')
        polarity=0;
        lims='limited_range';
    elseif limit_output==0  && strcmpi(in_polarity,'unipolar')
        lims='unlimited_range';
        polarity=0;
    elseif limit_output==1  && strcmpi(in_polarity,'bipolar')
        lims='unlimited_range_bipolar';
        polarity=0.5;
    elseif limit_output==0  && strcmpi(in_polarity,'bipolar')
        lims='unlimited_range_bipolar';
        polarity=0.5;
    end
    
    if strcmpi(database,'CIFAR-10')
        database=database;
    elseif strcmpi(database,'SVHN')
        database=database;
    elseif strcmpi(database,'YALE-FACE')
        database=database;    
    elseif strcmpi(database,'YALE-FACE-B')
        database=database;        
    elseif strcmpi(database,'ORL')
        database=database;        
    elseif strcmpi(database,'F-MNIST')
        database=database;
    elseif strcmpi(database,'K-MNIST')
        database=database;    
    else
        database='MNIST';
    end
    
    if strcmpi(learn_algorithm,'trainscg')
        learning_algorithm='Scaled_Conjugate_Gradient';
    else
        learning_algorithm='Scaled_Conjugate_Gradient';
    end
    
    if all_logsig==1
        learning_algorithm=strcat(learning_algorithm,'_allLogsig');
    end
    
    if strcmpi(remap_mode,'mode1')
        remap_folder='remap_mode1';
    elseif strcmpi(remap_mode,'mode2')
        remap_folder='remap_mode2';
    elseif strcmpi(remap_mode,'mode3')
        remap_folder='remap_mode3';
    elseif strcmpi(remap_mode,'mode4')
        remap_folder='remap_mode4';
    elseif strcmpi(remap_mode,'mode5')
        remap_folder='remap_mode5';
    elseif strcmpi(remap_mode,'mode6')
        remap_folder='remap_mode6';
    elseif strcmpi(remap_mode,'mode7')
        remap_folder='remap_mode7';
    else
        remap_folder='remap_mode1';
    end
    
    if strcmpi(sim_degradation,'yes')
        if strcmpi(flr_type,'STCKF_ON') || strcmpi(flr_type,'STCKF_OFF') || strcmpi(flr_type,'CORRF_ON') || strcmpi(flr_type,'STCKF_OFF_no_electroformed')
            ratioSTCKF=0.05;  
            deg_folder=strrep(sprintf('%s_%.3f',flr_type,ratioSTCKF),'.','p');
        end
    else
    	deg_folder='fresh';
        SCTKF_ratio=[0];
    end

    if strcmpi(correct_rs,'yes')
        correct_folder='rs_corrected';
    else
        correct_folder='no_correction';
    end
    
    if size(memdiode_model_array,1)<size(memdiode_model_array,2)
        memdiode_model_array=memdiode_model_array';
    end
    
    res_folder_layers='Neural_Network_MLP';  
    
    train_MC_folder=sprintf('train_%d', train_MC_idx);

    for memdiodo_model_i=1:max(size(memdiode_model_array))

        memdiode_model=memdiode_model_array{memdiodo_model_i};

        map_str=char(strrep(sprintf('%s_Hmin_%.2e-Hmax_%.2e_%s',memdiode_model, map_array{1,1}, map_array{1,2}, map_array{1,3}),'.','p'));
        if strcmpi(mode,'lin4') || strcmpi(mode,'log4') || strcmpi(mode,'memdiode4')
            map_str=sprintf('%s_%dsigma',map_str,numSigma);
        end
        
        for connections_i=1:size(connections,2)

           for image_size_mat_idx=1:size(image_size_mat,1)             
               image_size=image_size_mat(image_size_mat_idx,:);
               matrix_size=[image_size(1)*image_size(2) 10];

%                if exist(fullfile('..','..','..','..','DBs',database, lims, sprintf('%dby%d',image_size(1), image_size(2)), sprintf('%d_layers',length(neural_layers)), strjoin(string(neurons_per_layer),'_'), learning_algorithm, train_MC_folder, 'G_values.mat'),'file')
%                     load(fullfile('..','..','..','..','DBs',database, lims, sprintf('%dby%d',image_size(1), image_size(2)), sprintf('%d_layers',length(neural_layers)), strjoin(string(neurons_per_layer),'_'), learning_algorithm, train_MC_folder,'G_values.mat'));
%                     load(fullfile('..','..','..','..','DBs',database, lims, sprintf('%dby%d',image_size(1), image_size(2)), sprintf('train-images_%dx%d.mat',image_size(1), image_size(2))));
%                end
%                 
%                eval(sprintf('mean_MNIST=mean(images_t10k_%dx%d(:,:),2);', image_size(1), image_size(2)));
%                mean_MNIST(mean_MNIST<0)=0;
%                mean_MNIST(mean_MNIST>1)=1;
               
               img_resol_dir=sprintf('%dx%d_px',image_size(1),image_size(2));
             
               for N_i=1:length(number_of_images)

                   connections{1,connections_i}.CPA_size{1,image_size_mat_idx}={};
                       for rVoltage_i=1:length(read_voltage)

                            for rFrequency_i=1:length(input_vector_freq)
                                rFrequency=input_vector_freq(rFrequency_i);
                                for wVoltage_i=1:length(write_voltage)

                                    for wrFrequency_i=1:length(wrFrequency_vec)

                                        wrFrequency=wrFrequency_vec(wrFrequency_i);

                                        for Dcycle_i=1:length(Dcycle_vec)

                                            Dcycle=Dcycle_vec(Dcycle_i);                           

                                            for R_cs_i=1:length(R_cs)

                                                for Rs_i=1:length(series_resistance)

                                                    for SCTKF_ratio_i=1:length(SCTKF_ratio)
                                                        if strcmpi(sim_degradation,'yes')
                                                            if strcmpi(flr_type,'STCKF_ON') || strcmpi(flr_type,'STCKF_OFF') || strcmpi(flr_type,'CORRF_ON') || strcmpi(flr_type,'STCKF_OFF_no_electroformed') || strcmpi(flr_type,'STCKF_MIX')
                                                                ratioSTCKF=SCTKF_ratio(SCTKF_ratio_i);  
                                                                if ratioSTCKF > 0
                                                                    if ~strcmpi(flr_type,'STCKF_MIX')
                                                                        deg_folder=strrep(sprintf('%s_%.3f',flr_type,ratioSTCKF),'.','p');
                                                                    else
                                                                        deg_folder=strrep(sprintf('%s_%.3f_SA1_%.3f',flr_type,STCKF_total_ratio,ratioSTCKF),'.','p');    
                                                                    end
                                                                else
                                                                    deg_folder='fresh';
                                                                end
                                                            end
                                                        else
                                                            deg_folder='fresh';
                                                        end

                                                        for MC_i=1:MC_total

                                                            MC_folder=sprintf('MC=%d',MC_i);

                                                            NW_files_id='MLP_';
                                                            for layer_str_i=1:length(neural_layers)-1
                                                                NW_files_id=strcat(NW_files_id,num2str(neurons_per_layer(layer_str_i)),'by',num2str(neurons_per_layer(layer_str_i+1)),'_');
                                                            end
                                                            NW_files_id=strcat(NW_files_id,'closed_loop');  

                                                            freq_folder_str=sprintf('freq_%.3g_tr_%.3g_DC_%.3g_DCv_%.3g',wrFrequency,trise,Dcycle,Dcycle_v);
                                                            read_freq_folder_str=sprintf('freq_%.3g_tr_%.3g',rFrequency,in_vect_r_f_time);                                                                                                                                    

                                                            read_results_folder=fullfile('..','..','..','..','results',...
                                                                                         res_folder_layers,...
                                                                                         database,...
                                                                                         img_resol_dir,...
                                                                                         sprintf('%d_layers',length(neural_layers)),...
                                                                                         NW_files_id,...
                                                                                         lims,...
                                                                                         learning_algorithm,...
                                                                                         train_MC_folder,...
                                                                                         'dual_crossbar',...
                                                                                         connections{1,connections_i}.name,...
                                                                                         map_str,...
                                                                                         strrep(strcat('Partitions_',num2str(partitions_N)),'  ','_'), ...
                                                                                         correct_folder,... 
                                                                                         strcat('N_',num2str(number_of_images(N_i))),...
                                                                                         strcat('Vread_',strrep(num2str(read_voltage(rVoltage_i)),'.','p')),...
                                                                                         read_freq_folder_str,...
                                                                                         strcat('Vwrite_',strrep(num2str(write_voltage(wVoltage_i)),'.','p')),...
                                                                                         freq_folder_str,...
                                                                                         sense_folder,...
                                                                                         strcat('Rs_',strrep(num2str(series_resistance(Rs_i)),'.','p'),'_Rcs_',strrep(num2str(R_cs(R_cs_i)),'.','p')),...
                                                                                         deg_folder,...
                                                                                         'read',...
                                                                                         h_data,...
                                                                                         simEngine,...
                                                                                         MC_folder,...
                                                                                         'inference_results.mat');

                                                            pwr_results_folder=fullfile('..','..','..','..','results',...
                                                                                         res_folder_layers,...
                                                                                         database,...
                                                                                         img_resol_dir,...
                                                                                         sprintf('%d_layers',length(neural_layers)),...
                                                                                         NW_files_id,...
                                                                                         lims,...
                                                                                         learning_algorithm,...
                                                                                         train_MC_folder,...
                                                                                         'dual_crossbar',...
                                                                                         connections{1,connections_i}.name,...
                                                                                         map_str,...
                                                                                         strrep(strcat('Partitions_',num2str(partitions_N)),'  ','_'),...
                                                                                         correct_folder,... 
                                                                                         strcat('N_',num2str(number_of_images(N_i))),...
                                                                                         strcat('Vread_',strrep(num2str(read_voltage(rVoltage_i)),'.','p')),...
                                                                                         read_freq_folder_str,...
                                                                                         strcat('Vwrite_',strrep(num2str(write_voltage(wVoltage_i)),'.','p')),...
                                                                                         freq_folder_str,...                                                                                         sense_folder,...
                                                                                         strcat('Rs_',strrep(num2str(series_resistance(Rs_i)),'.','p'),'_Rcs_',strrep(num2str(R_cs(R_cs_i)),'.','p')),...
                                                                                         deg_folder,...
                                                                                         'read',...
                                                                                         h_data,...
                                                                                         simEngine,...
                                                                                         MC_folder,...
                                                                                         'calc_pwr.mat');                                                                     


                                                           RE_margins_results_folder=fullfile('..','..','..','..','results',...
                                                                                         res_folder_layers,...
                                                                                         database,...
                                                                                         img_resol_dir,...
                                                                                         sprintf('%d_layers',length(neural_layers)),...
                                                                                         NW_files_id,...
                                                                                         lims,...
                                                                                         learning_algorithm,...
                                                                                         train_MC_folder,...
                                                                                         'dual_crossbar',...
                                                                                         connections{1,connections_i}.name,...
                                                                                         map_str,...
                                                                                         strrep(strcat('Partitions_',num2str(partitions_N)),'  ','_'),...
                                                                                         correct_folder,... 
                                                                                         strcat('N_',num2str(number_of_images(N_i))),...
                                                                                         strcat('Vread_',strrep(num2str(read_voltage(rVoltage_i)),'.','p')),...
                                                                                         read_freq_folder_str,...
                                                                                         strcat('Vwrite_',strrep(num2str(write_voltage(wVoltage_i)),'.','p')),...
                                                                                         freq_folder_str,...                                                                                         sense_folder,...
                                                                                         strcat('Rs_',strrep(num2str(series_resistance(Rs_i)),'.','p'),'_Rcs_',strrep(num2str(R_cs(R_cs_i)),'.','p')),...
                                                                                         deg_folder,...
                                                                                         'RE_margins',...
                                                                                         h_data,...
                                                                                         simEngine,...
                                                                                         MC_folder,...
                                                                                         'RE_margins.mat');

                                                            read_status_folder=fullfile('..','..','..','..','results',...
                                                                                         res_folder_layers,...
                                                                                         database,...
                                                                                         img_resol_dir,...
                                                                                         sprintf('%d_layers',length(neural_layers)),...
                                                                                         NW_files_id,...
                                                                                         lims,...
                                                                                         learning_algorithm,...
                                                                                         train_MC_folder,...
                                                                                         'dual_crossbar',...
                                                                                         connections{1,connections_i}.name,...
                                                                                         map_str,...
                                                                                         strrep(strcat('Partitions_',num2str(partitions_N)),'  ','_'),...
                                                                                         correct_folder,... 
                                                                                         strcat('N_',num2str(number_of_images(N_i))),...
                                                                                         strcat('Vread_',strrep(num2str(read_voltage(rVoltage_i)),'.','p')),...
                                                                                         read_freq_folder_str,...
                                                                                         strcat('Vwrite_',strrep(num2str(write_voltage(wVoltage_i)),'.','p')),...
                                                                                         freq_folder_str,...                                                                                         sense_folder,...
                                                                                         strcat('Rs_',strrep(num2str(series_resistance(Rs_i)),'.','p'),'_Rcs_',strrep(num2str(R_cs(R_cs_i)),'.','p')),...
                                                                                         deg_folder,...
                                                                                         'read',...
                                                                                         h_data,...
                                                                                         simEngine,...
                                                                                         MC_folder,...
                                                                                         'inference_status.mat');

                                                            read_status_folder_remap=fullfile('..','..','..','..','results',...
                                                                                         res_folder_layers,...
                                                                                         database,...
                                                                                         img_resol_dir,...
                                                                                         sprintf('%d_layers',length(neural_layers)),...
                                                                                         NW_files_id,...
                                                                                         lims,...
                                                                                         learning_algorithm,...
                                                                                         train_MC_folder,...
                                                                                         'dual_crossbar',...
                                                                                         connections{1,connections_i}.name,...
                                                                                         map_str,...
                                                                                         strrep(strcat('Partitions_',num2str(partitions_N)),'  ','_'),...
                                                                                         correct_folder,... 
                                                                                         strcat('N_',num2str(number_of_images(N_i))),...
                                                                                         strcat('Vread_',strrep(num2str(read_voltage(rVoltage_i)),'.','p')),...
                                                                                         read_freq_folder_str,...
                                                                                         strcat('Vwrite_',strrep(num2str(write_voltage(wVoltage_i)),'.','p')),...
                                                                                         freq_folder_str,...                                                                                         sense_folder,...
                                                                                         strcat('Rs_',strrep(num2str(series_resistance(Rs_i)),'.','p'),'_Rcs_',strrep(num2str(R_cs(R_cs_i)),'.','p')),...
                                                                                         deg_folder,...
                                                                                         'read',...
                                                                                         h_data,...
                                                                                         simEngine,...
                                                                                         MC_folder,...
                                                                                         remap_folder,...
                                                                                         'inference_status.mat');

                                                            read_results_folder_remap=fullfile('..','..','..','..','results',...
                                                                                         res_folder_layers,...
                                                                                         database,...
                                                                                         img_resol_dir,...
                                                                                         sprintf('%d_layers',length(neural_layers)),...
                                                                                         NW_files_id,...
                                                                                         lims,...
                                                                                         learning_algorithm,...
                                                                                         train_MC_folder,...
                                                                                         'dual_crossbar',...
                                                                                         connections{1,connections_i}.name,...
                                                                                         map_str,...
                                                                                         strrep(strcat('Partitions_',num2str(partitions_N)),'  ','_'),...
                                                                                         correct_folder,... 
                                                                                         strcat('N_',num2str(number_of_images(N_i))),...
                                                                                         strcat('Vread_',strrep(num2str(read_voltage(rVoltage_i)),'.','p')),...
                                                                                         read_freq_folder_str,...
                                                                                         strcat('Vwrite_',strrep(num2str(write_voltage(wVoltage_i)),'.','p')),...
                                                                                         freq_folder_str,...                                                                                         sense_folder,...
                                                                                         strcat('Rs_',strrep(num2str(series_resistance(Rs_i)),'.','p'),'_Rcs_',strrep(num2str(R_cs(R_cs_i)),'.','p')),...
                                                                                         deg_folder,...
                                                                                         'read',...
                                                                                         h_data,...
                                                                                         simEngine,...
                                                                                         MC_folder,...
                                                                                         remap_folder,...
                                                                                         'inference_results.mat');

                                                            if exist(read_results_folder,'file')
                                                                load(read_results_folder);
                                                                SIM_RESULTS=SIM_DATA;

                                                                connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral(MC_i,Rs_i,SCTKF_ratio_i)=SIM_RESULTS.ERROR_gral;                                                    
                                                                if isfield(connections{1,connections_i}.CPA_size{1,image_size_mat_idx},'fault_ratio')
                                                                    if ~ismember(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.fault_ratio,SCTKF_ratio(SCTKF_ratio_i))
                                                                        connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.fault_ratio(SCTKF_ratio_i)=SCTKF_ratio(SCTKF_ratio_i);
                                                                    end
                                                                else
                                                                    connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.fault_ratio(SCTKF_ratio_i)=SCTKF_ratio(SCTKF_ratio_i);
                                                                end
                                                            end

                                                            if exist(read_results_folder_remap,'file')
                                                                load(read_results_folder_remap);
                                                                load(read_status_folder_remap);
                                                                SIM_RESULTS=SIM_DATA_remap;

                                                                connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral(MC_i,Rs_i,SCTKF_ratio_i)=SIM_RESULTS.ERROR_gral;

                                                                if isfield(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx},'fault_ratio')
                                                                    if ~ismember(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.fault_ratio,SCTKF_ratio(SCTKF_ratio_i))
                                                                        connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.fault_ratio(SCTKF_ratio_i)=SCTKF_ratio(SCTKF_ratio_i);
                                                                    end
                                                                else
                                                                    connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.fault_ratio(SCTKF_ratio_i)=SCTKF_ratio(SCTKF_ratio_i);
                                                                end                                                    
                                                            end                                                

                                                            if exist(read_status_folder,'file')
                                                                clear W_pos_init W_neg_init
                                                                load(read_status_folder);
                                                                if exist('inference_vars','var')
                                                                    if isfield(inference_vars,'W_pos_init') &&  isfield(inference_vars,'W_neg_init')
                                                                        if ~isempty(inference_vars.W_pos_init) && ~isempty(inference_vars.W_neg_init)
                                                                            W_pos_init=inference_vars.W_pos_init;
                                                                            W_neg_init=inference_vars.W_neg_init;
                                                                            W_pos_init_fresh=inference_vars.W_pos_init_fresh;
                                                                            W_neg_init_fresh=inference_vars.W_neg_init_fresh;

                                                                            SWV=0;
                                                                            for SWV_i_idx=1:length(W_pos_init_fresh)
                                                                                SWV=sum(sum(abs((W_pos_init{SWV_i_idx,1}-W_neg_init{SWV_i_idx,1})-(W_pos_init_fresh{SWV_i_idx,1}-W_neg_init_fresh{SWV_i_idx,1}))))+SWV;
                                                                            end
                                                                            connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV(MC_i,Rs_i,SCTKF_ratio_i)=SWV;

                                                                        end
                                                                    end
                                                                end
                                                            end

                                                            if exist(read_status_folder_remap,'file')
                                                                clear W_pos_init W_neg_init
                                                                load(read_status_folder_remap);
                                                                if exist('inference_vars','var')
                                                                    if isfield(inference_vars,'W_pos_init') &&  isfield(inference_vars,'W_neg_init')
                                                                        if ~isempty(inference_vars.W_pos_init) && ~isempty(inference_vars.W_neg_init)
                                                                            W_pos_init=inference_vars.W_pos_init;
                                                                            W_neg_init=inference_vars.W_neg_init;
                                                                            W_pos_init_fresh=inference_vars.W_pos_init_fresh;
                                                                            W_neg_init_fresh=inference_vars.W_neg_init_fresh;

                                                                            if ~iscell(W_pos_init)
                                                                                aux=W_pos_init;
                                                                                clear W_pos_init
                                                                                W_pos_init{1,1}=aux;
                                                                            end

                                                                            if ~iscell(W_neg_init)
                                                                                aux=W_neg_init;
                                                                                clear W_neg_init
                                                                                W_neg_init{1,1}=aux;
                                                                            end                                                                

                                                                            SWV=0;
                                                                            for SWV_i_idx=1:length(W_pos_init_fresh)
                                                                                SWV=sum(sum(abs((W_pos_init{SWV_i_idx,1}-W_neg_init{SWV_i_idx,1})-(W_pos_init_fresh{SWV_i_idx,1}-W_neg_init_fresh{SWV_i_idx,1}))))+SWV;
                                                                            end
                                                                            connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV(MC_i,Rs_i,SCTKF_ratio_i)=SWV;

                                                                        end
                                                                    end
                                                                end
                                                            end                                                
                                                        end
                                                    end
                                                end
                                                if isfield(connections{1,connections_i},'CPA_size')
                                                    if ~isempty(connections{1,connections_i}.CPA_size{1,image_size_mat_idx})
                                                        connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral==0)=NaN;
                                                        connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.mean_error_gral=reshape(nanmean(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,1),size(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,2),size(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,3));
                                                        connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.std_error_gral=reshape(std(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,1),size(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,2),size(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,3));
                                                        %connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.mean_SWV=reshape(mean(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,1),size(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,2),size(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,3));
                                                        %connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.std_SWV=reshape(std(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,1),size(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,2),size(connections{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,3));
                                                    end
                                                end
                                                if isfield(connections_remap{1,connections_i},'CPA_size')
                                                    if ~isempty(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx})
                                                        connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral==0)=NaN;
                                                        connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.mean_error_gral=reshape(nanmean(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,1),size(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,2),size(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,3));
                                                        connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.std_error_gral=reshape(std(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,1),size(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,2),size(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.error_gral,3));
                                                        %connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.mean_SWV=reshape(mean(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,1),size(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,2),size(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,3));
                                                        %connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.std_SWV=reshape(std(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,1),size(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,2),size(connections_remap{1,connections_i}.CPA_size{1,image_size_mat_idx}.SWV,3));
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                       end
                end
            end
        end
    end
    
    results.connections=connections;
    results.connections_remap=connections_remap;
end